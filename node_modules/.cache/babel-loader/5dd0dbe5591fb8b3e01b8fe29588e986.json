{"ast":null,"code":"var _jsxFileName = \"/Users/ambarmodi/Desktop/Sem-4/WebDevelopment/Project2Wordle/CS5610_project2_shruti_mahvash/src/components/Alphabet.js\";\nimport React, { useContext } from 'react';\nimport './EasyLevel.css';\nimport MainGrid from './MainGrid';\nimport { useState } from 'react';\nimport { AppContext } from './EasyLevel';\nimport '../App.css';\n\n// TODO change it to alphaPos and enteredVal\n\nfunction Alphabet(_ref) {\n  var letterPos = _ref.letterPos,\n    attemptVal = _ref.attemptVal;\n  var _useContext = useContext(AppContext),\n    grid = _useContext.grid,\n    correctWord = _useContext.correctWord;\n  var alphabet = grid[attemptVal][letterPos];\n\n  // TODO: change the logic here in if else statements\n  var correct = correctWord[letterPos] === alphabet;\n  var almost = !correct && letter !== '' && correctWord.includes(alphabet);\n  var letterState = correct ? 'correct' : almost ? 'almost' : 'error';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alphabet\",\n    id: letterState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, alphabet);\n}\nexport default Alphabet;","map":{"version":3,"names":["React","useContext","MainGrid","useState","AppContext","Alphabet","letterPos","attemptVal","grid","correctWord","alphabet","correct","almost","letter","includes","letterState"],"sources":["/Users/ambarmodi/Desktop/Sem-4/WebDevelopment/Project2Wordle/CS5610_project2_shruti_mahvash/src/components/Alphabet.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport './EasyLevel.css';\nimport MainGrid from './MainGrid';\nimport { useState } from 'react';\nimport { AppContext } from './EasyLevel';\nimport '../App.css';\n\n// TODO change it to alphaPos and enteredVal\n\nfunction Alphabet({ letterPos, attemptVal }) {\n  const { grid, correctWord } = useContext(AppContext);\n  const alphabet = grid[attemptVal][letterPos];\n\n  // TODO: change the logic here in if else statements\n  const correct = correctWord[letterPos] === alphabet;\n  const almost = !correct && letter !== '' && correctWord.includes(alphabet);\n\n  const letterState = correct ? 'correct' : almost ? 'almost' : 'error';\n\n  return (\n    <div className=\"alphabet\" id={letterState}>\n      {alphabet}\n    </div>\n  );\n}\n\nexport default Alphabet;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAO,YAAY;;AAEnB;;AAEA,SAASC,QAAQ,OAA4B;EAAA,IAAzBC,SAAS,QAATA,SAAS;IAAEC,UAAU,QAAVA,UAAU;EAAA,kBACTN,UAAU,CAACG,UAAU,CAAC;IAA5CI,IAAI,eAAJA,IAAI;IAAEC,WAAW,eAAXA,WAAW;EACzB,IAAMC,QAAQ,GAAGF,IAAI,CAACD,UAAU,CAAC,CAACD,SAAS,CAAC;;EAE5C;EACA,IAAMK,OAAO,GAAGF,WAAW,CAACH,SAAS,CAAC,KAAKI,QAAQ;EACnD,IAAME,MAAM,GAAG,CAACD,OAAO,IAAIE,MAAM,KAAK,EAAE,IAAIJ,WAAW,CAACK,QAAQ,CAACJ,QAAQ,CAAC;EAE1E,IAAMK,WAAW,GAAGJ,OAAO,GAAG,SAAS,GAAGC,MAAM,GAAG,QAAQ,GAAG,OAAO;EAErE,oBACE;IAAK,SAAS,EAAC,UAAU;IAAC,EAAE,EAAEG,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvCL,QAAQ,CACL;AAEV;AAEA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module"}