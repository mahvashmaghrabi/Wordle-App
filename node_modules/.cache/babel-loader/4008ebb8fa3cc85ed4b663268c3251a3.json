{"ast":null,"code":"import _toConsumableArray from \"/Users/ambarmodi/Desktop/Sem-4/WebDevelopment/Project2Wordle/CS5610_project2_shruti_mahvash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/ambarmodi/Desktop/Sem-4/WebDevelopment/Project2Wordle/CS5610_project2_shruti_mahvash/src/components/Alphabet.js\";\nimport React, { useContext, useEffect } from 'react';\nimport './EasyLevel.css';\nimport MainGrid from './MainGrid';\nimport { useState } from 'react';\nimport { AppContext } from './EasyLevel';\nimport '../App.css';\n\n// TODO change it to alphaPos and enteredVal\n\nfunction Alphabet(_ref) {\n  var letterPos = _ref.letterPos,\n    attemptVal = _ref.attemptVal;\n  var _useContext = useContext(AppContext),\n    grid = _useContext.grid,\n    correctWord = _useContext.correctWord,\n    currAttempt = _useContext.currAttempt,\n    disabledLetters = _useContext.disabledLetters,\n    setDisabledLetters = _useContext.setDisabledLetters;\n  var alphabet = grid[attemptVal][letterPos];\n\n  // TODO: change the logic here in if else statements\n  var correct = correctWord.toUpperCase()[letterPos] === alphabet;\n  var almost = !correct && alphabet !== '' && correctWord.toUpperCase().includes(alphabet);\n  var letterState = currAttempt.attempt > attemptVal && (correct ? 'correct' : almost ? 'almost' : 'error');\n  useEffect(function () {\n    if (alphabet !== '' && !correct && !almost) {\n      setDisabledLetters(function (prev) {\n        return [].concat(_toConsumableArray(prev), [alphabet]);\n      });\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alphabet\",\n    id: letterState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, alphabet);\n}\nexport default Alphabet;","map":{"version":3,"names":["React","useContext","useEffect","MainGrid","useState","AppContext","Alphabet","letterPos","attemptVal","grid","correctWord","currAttempt","disabledLetters","setDisabledLetters","alphabet","correct","toUpperCase","almost","includes","letterState","attempt","prev"],"sources":["/Users/ambarmodi/Desktop/Sem-4/WebDevelopment/Project2Wordle/CS5610_project2_shruti_mahvash/src/components/Alphabet.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport './EasyLevel.css';\nimport MainGrid from './MainGrid';\nimport { useState } from 'react';\nimport { AppContext } from './EasyLevel';\nimport '../App.css';\n\n// TODO change it to alphaPos and enteredVal\n\nfunction Alphabet({ letterPos, attemptVal }) {\n  const {\n    grid,\n    correctWord,\n    currAttempt,\n    disabledLetters,\n    setDisabledLetters,\n  } = useContext(AppContext);\n  const alphabet = grid[attemptVal][letterPos];\n\n  // TODO: change the logic here in if else statements\n  const correct = correctWord.toUpperCase()[letterPos] === alphabet;\n\n  const almost =\n    !correct && alphabet !== '' && correctWord.toUpperCase().includes(alphabet);\n\n  const letterState =\n    currAttempt.attempt > attemptVal &&\n    (correct ? 'correct' : almost ? 'almost' : 'error');\n\n  useEffect(() => {\n    if (alphabet !== '' && !correct && !almost) {\n      setDisabledLetters((prev) => [...prev, alphabet]);\n    }\n  }, [currAttempt.attempt]);\n\n  return (\n    <div className=\"alphabet\" id={letterState}>\n      {alphabet}\n    </div>\n  );\n}\n\nexport default Alphabet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAO,YAAY;;AAEnB;;AAEA,SAASC,QAAQ,OAA4B;EAAA,IAAzBC,SAAS,QAATA,SAAS;IAAEC,UAAU,QAAVA,UAAU;EAAA,kBAOnCP,UAAU,CAACI,UAAU,CAAC;IALxBI,IAAI,eAAJA,IAAI;IACJC,WAAW,eAAXA,WAAW;IACXC,WAAW,eAAXA,WAAW;IACXC,eAAe,eAAfA,eAAe;IACfC,kBAAkB,eAAlBA,kBAAkB;EAEpB,IAAMC,QAAQ,GAAGL,IAAI,CAACD,UAAU,CAAC,CAACD,SAAS,CAAC;;EAE5C;EACA,IAAMQ,OAAO,GAAGL,WAAW,CAACM,WAAW,EAAE,CAACT,SAAS,CAAC,KAAKO,QAAQ;EAEjE,IAAMG,MAAM,GACV,CAACF,OAAO,IAAID,QAAQ,KAAK,EAAE,IAAIJ,WAAW,CAACM,WAAW,EAAE,CAACE,QAAQ,CAACJ,QAAQ,CAAC;EAE7E,IAAMK,WAAW,GACfR,WAAW,CAACS,OAAO,GAAGZ,UAAU,KAC/BO,OAAO,GAAG,SAAS,GAAGE,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;EAErDf,SAAS,CAAC,YAAM;IACd,IAAIY,QAAQ,KAAK,EAAE,IAAI,CAACC,OAAO,IAAI,CAACE,MAAM,EAAE;MAC1CJ,kBAAkB,CAAC,UAACQ,IAAI;QAAA,oCAASA,IAAI,IAAEP,QAAQ;MAAA,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACH,WAAW,CAACS,OAAO,CAAC,CAAC;EAEzB,oBACE;IAAK,SAAS,EAAC,UAAU;IAAC,EAAE,EAAED,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvCL,QAAQ,CACL;AAEV;AAEA,eAAeR,QAAQ"},"metadata":{},"sourceType":"module"}